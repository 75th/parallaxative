"use strict";function _possibleConstructorReturn(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,r,o){return r&&t(e.prototype,r),o&&t(e,o),e}}(),_get=function t(e,r,o){null===e&&(e=Function.prototype);var i=Object.getOwnPropertyDescriptor(e,r);if(void 0===i){var a=Object.getPrototypeOf(e);return null===a?void 0:t(a,r,o)}if("value"in i)return i.value;var n=i.get;if(void 0!==n)return n.call(o)},ParallaxativeAnimationValueSet=function t(e){var r=this;_classCallCheck(this,t);var o={valueFormat:"translateY(_)",substitutionString:"_",scrollPixelsPerParallaxPixel:10,resetValue:0};if(e=Object.assign({},o,e),Object.getOwnPropertyNames(e).forEach(function(t){r[t]=e[t]}),this.scrollPixelsPerParallaxPixel<=0)throw"scrollPixelsPerParallaxPixel must be greater than zero."},ParallaxativeAnimation=function(t){function e(t,r,o){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[new ParallaxativeAnimationValueSet];return _classCallCheck(this,e),_possibleConstructorReturn(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,r,o,i))}return _inherits(e,t),_createClass(e,[{key:"init",value:function t(){_get(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this),this.animateTargets.forEach(function(t){t.classList.add("parallaxative-animated")}),this.scrollDetector.scrollTarget.classList.add("parallaxative-container")}},{key:"updateCSS",value:function t(){var r=this,o=[],i=this.scrollDetector.clampedRelativeScrollPosition(),a=this.scrollDetector.scrollIsVertical?"height":"width",n=a.slice(0,1).toUpperCase()+a.slice(1),l=this.scrollDetector.scrollTarget.getBoundingClientRect()[a],s=l+window["inner"+n];this.valueSets.forEach(function(t){var e=s-s/t.scrollPixelsPerParallaxPixel+l,n=(e-l)*i;o.push(t.valueFormat.replace(t.substitutionString,n.toString()+"px")),r.animateTargets.forEach(function(t){t.style[a]=e.toString()+"px"})}),_get(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"setCSS",this).call(this,o),this.ticking=!1}}]),e}(ScrollAnimation);
//# sourceMappingURL=./parallaxative.min.js.map